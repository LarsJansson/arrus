{
    "$schema": "http://json-schema.org/draft-07/schema#",
    "$id": "http://us4us.eu/arius-sdk/cfg/hal.schema.json",
    "title": "HAL configuration file",
    "description": "A file, which contains all information required to configure ARIUS HAL.",
    "type": "object",
    "required": ["hal"],
    "properties": {
        "hal": {
            "$ref": "#/halObjectDefinition"
        }
    },
    "halObjectDefinition": {
        "type": "object",
        "required": ["transducer", "connector", "speedOfSound", "samplingFrequency", "coupling", "transmitPower", "transmitWaveform", "TGCWaveform", "frame"],
        "properties": {
            "transducer": {
                "type": "string"
            },
            "connector": {
                "enum": ["A", "B", "AB"]
            },
            "coupling": {
                "enum": ["AC", "DC"]
            },
            "speedOfSound": {
                "type": "number"
            },
            "samplingFrequency": {
                "enum": [25000000, 50000000, 65000000]
            },
            "coupling": {
                "type": "string"
            },
            "afeAntiAliasingFilter": {
                "enum": ["9MHz", "10MHz", "15MHz", "18MHz"]
            },
            "afeInputImpedance": {
                "enum": ["50", "100", "200", "400", "1000", "2000", "OPEN", "open"]
            },
            "afeGainMode": {
                "enum": ["LO", "HI"]
            },
            "transmitPower": {
                "$ref": "#/halDefinitions/transmitPower"
            },
            "transmitWaveform": {
                "$ref": "#/halDefinitions/transmitWaveform"
            },
            "TGCWaveform": {
                "$ref": "#/halDefinitions/TGCWaveform"
            },
            "frame": {
                "$ref": "#/halDefinitions/frame"
            }
        }
    },
    "halDefinitions": {
        "transmitPower": {
            "type": "object",
            "required": ["HV0"],
            "properties": {
                "HV0": {
                    "type": "number",
                    "minimum": 0.0,
                    "maximum": 1.0
                }
            }
        },
        "transmitWaveform": {
            "type": "array",
            "minItems": 1,
            "items": {
                "$ref": "#/transmitWaveformItemDefinition"
            }
        },
        "TGCWaveform": {
            "type": "array",
            "minItems": 1,
            "items": {
                "type": "object",
                "oneOf": [{
                    "$ref": "#/TGCWaveformItemDefinitions/linear"
                }, {
                    "$ref": "#/TGCWaveformItemDefinitions/points"
                }]
            }
        },
        "frame": {
            "type": "array",
            "minItems": 1,
            "maxItems": 256,
            "items": {
                "$ref": "#/frameItemDefinition"
            }
        }
    },
    "transmitWaveformItemDefinition": {
        "type": "object",
        "required": ["type", "parameters", "clock"],
        "properties": {
            "type": {
                "enum": ["parametric"]
            },
            "clock": {
                "enum": [200000000]
            },
            "parameters": {
                "type": "object",
                "required": ["A", "B", "C", "D", "invert"],
                "properties": {
                    "A": {
                        "type": "integer",
                        "minimum": 0,
                        "maximum": 2047
                    },
                    "B": {
                        "type": "integer",
                        "minimum": 0,
                        "maximum": 2047
                    },
                    "C": {
                        "type": "integer",
                        "minimum": 0,
                        "maximum": 2047
                    },
                    "D": {
                        "type": "integer",
                        "minimum": 1,
                        "maximum": 127
                    },
                    "invert": {
                        "enum": ["true", "false"]
                    }
                }
            }
        }
    },
    "TGCWaveformItemDefinitions": {
        "linear": {
            "required": ["type", "startSample", "endSample", "startValue", "increment"],
            "properties": {
                "type": {
                    "enum": ["linear"]
                },
                "startSample": {
                    "type": "integer",
                    "minimum": 0,
                    "maximum": 1023
                },
                "endSample": {
                    "type": "integer",
                    "minimum": 0,
                    "maximum": 1023
                },
                "startValue": {
                    "type": "number",
                    "minimum": 0.0,
                    "maximum": 1.0
                },
                "increment": {
                    "type": "number",
                    "minimum": 0.0,
                    "maximum": 1.0
                }
            }
        },
        "points": {
            "required": ["type", "points"],
            "properties": {
                "type": {
                    "enum": ["points"]
                },
                "points": {
                    "type": "array",
                    "minItems": 1,
                    "maxItems": 1024,
                    "items": {
                        "type": "object",
                        "required": ["x", "y"],
                        "properties": {
                            "x": {
                                "type": "integer",
                                "minimum": 0,
                                "maximum": 1023
                            },
                            "y": {
                                "type": "number",
                                "minimum": 0.0,
                                "maximum": 1.0
                            }
                        }
                    }
                }
            }
        }
    },
    "frameItemDefinition": {
        "type": "object",
        "required": ["id", "startSample", "endSample", "transmit", "timeToNextEvent", "softTrigger", "event"],
        "properties": {
            "id": {
                "type": "integer"
            },
            "startSample": {
                "type": "integer",
                "minimum": 0,
                "maximum": 65535
            },
            "endSample": {
                "type": "integer",
                "minimum": 0,
                "maximum": 65535
            },
            "transmit": {
                "$ref": "#/frameTransmitDefinition"
            },
            "receive": {
                "$ref": "#/frameTransmitDefinition"
            },
            "event": {
                "$ref": "#/eventDefinition"
            }
        },
        "allOf": [{
            "$ref": "#/frameEventCommonProps"
        }]
    },
    "frameEventCommonProps": {
        "properties": {
            "timeToNextEvent": {
                "type": "number",
                "minimum": 0.00001,
                "maximum": 1.0
            },
            "softTrigger": {
                "enum": [0, 1]
            }
        }
    },
    "eventDefinition": {
        "type": "array",
        "minItems": 1,
        "maxItems": 256,
        "items": {
            "type": "object",
            "allOf": [{
                "$ref": "#/frameEventCommonProps"
            }]
        }
    },
    "valuesRangesTypes": {
        "int": {
            "type": "string",
            "pattern": "^-?[0-9]+:-?[0-9]+:-?[0-9]+$"
        },
        "float": {
            "type": "string",
            "pattern": "^-?[0-9]+(\\.[0-9]+)?:-?[0-9]+(\\.[0-9]+)?:-?[0-9]+(\\.[0-9]+)?$"
        }
    },
    "frameTransmitDefinition": {
        "type": "object",
        "required": ["type", "aperture", "origin"],
        "properties": {
            "aperture": {
                "type": "integer",
                "minimum": 0
            },
            "apertureRange": {
                "$ref": "#/valuesRangesTypes/int"
            },
            "origin": {
                "type": "integer",
                "minimum": 0
            },
            "originRange": {
                "$ref": "#/valuesRangesTypes/int"
            }
        },
        "oneOf": [{
            "$ref": "#/frameTransmitCoordinationsDefinitions/polar"
        }, {
            "$ref": "#/frameTransmitCoordinationsDefinitions/cartesian"
        }, {
            "$ref": "#/frameTransmitCoordinationsDefinitions/file"
        }]
    },
    "frameTransmitCoordinationsDefinitions": {
        "polar": {
            "properties": {
                "type": {
                    "enum": ["polar"]
                },
                "focus": {
                    "$ref": "#/polarCoordinationsDefinitions"
                },
                "center": {
                    "$ref": "#/polarCoordinationsDefinitions"
                }
            }
        },
        "cartesian": {
            "properties": {
                "type": {
                    "enum": ["cartesian"]
                },
                "focus": {
                    "$ref": "#/cartesianCoordinationsDefinitions"
                },
                "center": {
                    "$ref": "#/cartesianCoordinationsDefinitions"
                }
            }
        },
        "file": {
            "properties": {
                "type": {
                    "enum": ["file"]
                }
            }
        }
    },
    "polarCoordinationsDefinitions": {
        "type": "object",
        "required": ["r", "theta"],
        "properties": {
            "r": {
                "type": "number"
            },
            "rRange": {
                "$ref": "#/valuesRangesTypes/float"
            },
            "theta": {
                "type": "number"
            },
            "thetaRange": {
                "$ref": "#/valuesRangesTypes/float"
            }
        }
    },
    "cartesianCoordinationsDefinitions": {
        "type": "object",
        "required": ["x", "y"],
        "properties": {
            "x": {
                "type": "number"
            },
            "xRange": {
                "$ref": "#/valuesRangesTypes/float"
            },
            "y": {
                "type": "number"
            },
            "yRange": {
                "$ref": "#/valuesRangesTypes/float"
            }
        }
    }
}
